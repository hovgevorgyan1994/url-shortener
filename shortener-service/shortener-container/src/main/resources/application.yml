server:
  port: 8888

spring:
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/shortener-service
    username: postgres
    password: postgres
  data:
    r2dbc:
      repositories:
        enabled: true
  jpa:
    open-in-view: false
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL9Dialect
    hibernate:
      ddl-auto: create

shortener-service:
  shorten-request-topic-name: shorten-request

kafka-config:
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081
  num-of-partitions: 3
  replication-factor: 3

kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.StringSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer.class
  compression-type: snappy
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5

application:
  base:
    uri: http://localhost:8888/url/%s

hazelcast:
  cache:
    expiration: 300 #minutes
    response-cache: shortener-response-cache
    url-cache: shortened-url-cache


countryidentifier:
    ip-stack-api-key: 442464b9ca980cfab3858d8356e8dc88
    ip-stack-uri: http://api.ipstack.com/%s?access_key=%s
